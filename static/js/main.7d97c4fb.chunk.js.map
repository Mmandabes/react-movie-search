{"version":3,"sources":["CardResult.js","MovieCard.js","SearchMovies.js","reportWebVitals.js","index.js"],"names":["CardResult","movie","release_date","className","src","poster_path","alt","title","vote_average","overview","id","MovieCard","SearchMovies","useState","query","setQuery","movies","setMovies","searchMovies","e","a","preventDefault","url","fetch","res","json","data","results","length","console","log","onSubmit","htmlFor","type","name","placeholder","value","onChange","target","filter","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Main","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAEe,SAASA,EAAT,GAAgC,IAAVC,EAAS,EAATA,MAE/B,OAAIA,EAAMC,aAEJ,sBAAKC,UAAU,OAAf,UACG,qBAAKA,UAAU,cACXC,IAAG,0DAAqDH,EAAMI,aAC9DC,IAAKL,EAAMM,MAAQ,YAEvB,sBAAKJ,UAAU,gBAAf,UACG,oBAAIA,UAAU,cAAd,SAA6BF,EAAMM,QACnC,4BAAG,mDAAsBN,EAAMC,kBAC/B,4BAAG,6CAAgBD,EAAMO,kBACzB,mBAAGL,UAAU,aAAb,SAA2BF,EAAMQ,gBATZR,EAAMS,IAejC,sBAAKP,UAAU,OAAf,UACG,qBAAKA,UAAU,cACXC,IAAG,0DAAqDH,EAAMI,aAC9DC,IAAKL,EAAMM,MAAQ,YAEvB,sBAAKJ,UAAU,gBAAf,UACG,oBAAIA,UAAU,cAAd,SAA6BF,EAAMM,QACnC,mBAAGJ,UAAU,aAAb,SAA2BF,EAAMQ,gBAPZR,EAAMS,IClB9B,SAASC,EAAT,GAA+B,IAAVV,EAAS,EAATA,MAEjC,OACM,cAACD,EAAD,CAAYC,MAAOA,GAAYA,EAAMS,ICuC/BE,MA1Cf,WAAyB,IAAD,EAEKC,mBAAS,IAFd,mBAEdC,EAFc,KAEPC,EAFO,OAGOF,mBAAS,IAHhB,mBAGdG,EAHc,KAGNC,EAHM,KAIfC,EAAY,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBACIC,EAFY,kHAEqGR,EAFrG,iDAKGS,MAAMD,GALT,cAKTE,EALS,gBAMIA,EAAIC,OANR,cAMTC,EANS,iBAOOA,EAAKC,QAPZ,oBAQFC,OAAS,GARP,kCASNX,EAAUS,EAAKC,SATT,gCAYZV,EADkB,CAAC,CAACP,GAAI,IAAKL,YAAc,mCAAoCE,MAAO,aAAcE,SAAW,yCAXnG,0DAefoB,QAAQC,IAAR,MAfe,0DAAH,sDAmBlB,OACG,qCACA,uBAAM3B,UAAU,OAAO4B,SAAUb,EAAjC,UACG,uBAAOc,QAAQ,QAAQ7B,UAAU,UACjC,uBAAO8B,KAAK,OAAOC,KAAK,QAAQ/B,UAAU,QACvCgC,YAAY,oBACZC,MAAOtB,EAAOuB,SAAU,SAAClB,GAAD,OAAOJ,EAASI,EAAEmB,OAAOF,UAEpD,wBAAQH,KAAK,SAAS9B,UAAU,SAAhC,uBAEA,qBAAKA,UAAU,YAAf,SACQa,EAAOuB,QAAO,SAAAtC,GAAK,OAAIA,EAAMI,eAAamC,KAAI,SAAAvC,GAAK,OAChD,cAACU,EAAD,CAAWV,MAAOA,GAAYA,EAAMS,aC1BzC+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDRQ,E,uKAEF,OACE,sBAAK/C,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,gCACA,cAAC,EAAD,W,GALWgD,IAAMC,WAUzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.7d97c4fb.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nexport default function CardResult({ movie }) {\r\n   \r\n      if (movie.release_date) {\r\n         return (\r\n            <div className=\"card\" key={movie.id} >\r\n               <img className=\"card--image\"\r\n                   src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\r\n                   alt={movie.title + ' poster'}\r\n                   />\r\n               <div className=\"card--content\">\r\n                  <h3 className=\"card--title\">{movie.title}</h3>\r\n                  <p><small>RELEASE DATE: {movie.release_date}</small></p>\r\n                  <p><small>RATING: {movie.vote_average}</small></p>\r\n                  <p className=\"card--desc\">{movie.overview}</p>\r\n               </div>\r\n            </div>\r\n         )\r\n      } else {\r\n         return (\r\n            <div className=\"card\" key={movie.id} >\r\n               <img className=\"card--image\"\r\n                   src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\r\n                   alt={movie.title + ' poster'}\r\n                   />\r\n               <div className=\"card--content\">\r\n                  <h3 className=\"card--title\">{movie.title}</h3>\r\n                  <p className=\"card--desc\">{movie.overview}</p>\r\n               </div>\r\n            </div>      \r\n         )\r\n      }\r\n   }","import React from \"react\";\r\nimport CardResult from \"./CardResult\";\r\n\r\nexport default function MovieCard({ movie }) {\r\n\r\n   return (\r\n         <CardResult movie={movie} key={movie.id} />\r\n   )\r\n   \r\n}","import React, {useState} from \"react\";\r\nimport MovieCard from \"./MovieCard\"\r\n\r\nfunction SearchMovies() {\r\n   \r\n   const [query, setQuery] = useState('');\r\n   const [movies, setMovies] = useState([]);\r\n   const searchMovies = async (e) => {\r\n      e.preventDefault();\r\n      const url = `https://api.themoviedb.org/3/search/movie?api_key=324c3a95be625de22fa0d97d8f4df471&language=en-US&query=${query}&page=1&include_adult=false`;\r\n\r\n      try {\r\n         const res = await fetch(url);\r\n         const data = await res.json();\r\n         const results = await data.results;\r\n         if ( results.length > 0){\r\n            await setMovies(data.results);\r\n         } else {\r\n            const noResults = [{id: \"0\", poster_path : \"/q0ZdIhd9Zb8mu3E6GFMSBoNqzYl.jpg\", title: \"No Results\", overview : \"Sorry we could not find any results\" }]\r\n            setMovies(noResults);\r\n         }\r\n      } catch (err) {\r\n         console.log(err);\r\n      }\r\n   }\r\n\r\n   return (\r\n      <>\r\n      <form className=\"form\" onSubmit={searchMovies}>\r\n         <label htmlFor=\"query\" className=\"label\"></label>\r\n         <input type=\"text\" name=\"query\" className=\"input\"\r\n            placeholder=\"ie: jurassic park\"\r\n            value={query} onChange={(e) => setQuery(e.target.value)}\r\n         />\r\n         <button type=\"submit\" className=\"button\">Search</button>\r\n         </form>\r\n         <div className=\"card-list\">\r\n                {movies.filter(movie => movie.poster_path).map(movie => (\r\n                    <MovieCard movie={movie} key={movie.id}/>\r\n                ))}\r\n            </div>  \r\n         </>\r\n   )\r\n}\r\n\r\nexport default SearchMovies;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SearchMovies from './SearchMovies';\nimport reportWebVitals from './reportWebVitals';\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\">React Movie Search</h1>\n        <SearchMovies/>\n      </div>\n    )\n  }\n}\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}